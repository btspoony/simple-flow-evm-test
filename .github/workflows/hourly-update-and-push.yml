name: Hourly Update and Push

on:
    # Execute this workflow every hour
    schedule:
        - cron: "0 * * * *"
    # Allows you to trigger manually from GitHub's Actions tab
    workflow_dispatch:

jobs:
    updateAndPush:
        runs-on: ubuntu-latest

        permissions:
            contents: write

        env:
            RECIPIENT: ${{ vars.RECIPIENT }}
            MAINNET_FLOW_ADDRESS: ${{ vars.MAINNET_FLOW_ADDRESS }}
            TESTNET_FLOW_ADDRESS: ${{ vars.TESTNET_FLOW_ADDRESS }}
            PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
            FLOW_PRIVATE_KEY: ${{ secrets.FLOW_PRIVATE_KEY }}
            TESTNET_ALCHEMY_URL: ${{ secrets.TESTNET_ALCHEMY_URL }}
            MAINNET_ALCHEMY_URL: ${{ secrets.MAINNET_ALCHEMY_URL }}
            TESTNET_QUICKNODE_URL: ${{ secrets.TESTNET_QUICKNODE_URL }}
            MAINNET_QUICKNODE_URL: ${{ secrets.MAINNET_QUICKNODE_URL }}
            CHROME_METAMASK_PASSWORD: ${{ secrets.CHROME_METAMASK_PASSWORD }}
            CHROME_METAMASK_MNEMONIC: ${{ secrets.CHROME_METAMASK_MNEMONIC }}

        steps:
            # checkout current branch
            - uses: actions/checkout@v4
              with:
                ref: ${{ github.ref }}

            - name: Install dependencies (curl, jq, unzip)
              run: |
                sudo apt-get update
                sudo apt-get install -y curl jq unzip

            - name: Download Extensions
              run: ./scripts/download_extensions.sh

            - uses: oven-sh/setup-bun@v2

            - name: Install Dependencies
              run: bun install

            - name: Install Playwright Chrome
              run: npx playwright install chromium

            - name: Run the output generation
              run: bun start

            # 这里需要判断 outputs 下是否有 git 监控中的文件更新，如果有则设置 is_updated 为 true
            - name: Check if there are any updates
              id: check_updates
              run: |
                if git diff --name-only HEAD~1 HEAD | grep -q "outputs/" || git status --porcelain | grep -q "outputs/"; then
                  echo "Outputs directory has changed"
                  echo "is_updated=true" >> $GITHUB_OUTPUT
                else
                  echo "Outputs directory has not changed"
                  echo "is_updated=false" >> $GITHUB_OUTPUT
                fi

            - name: Commit all updates
              if: ${{ steps.check_updates.outputs.is_updated == 'true' }}
              uses: stefanzweifel/git-auto-commit-action@v5
              with:
                commit_message: "chore: update latency results."
                branch: main
                file_pattern: "outputs/*.*"
                commit_author: "GitHub Action <actions@github.com>"
